import { MessageContext } from 'vk-io';
import { NextMiddleware, NextMiddlewareReturn } from 'middleware-io';
import { stripIndents } from 'common-tags';

import { AbstractMiddleware, MiddlewareType } from '@/core';
import { adminPeerId, groupId } from '@/config';
import { vk } from '@/utils';
import { UsersGetResponse } from 'vk-io/lib/api/schemas/responses';

export class InviteMiddleware implements AbstractMiddleware {
  type = MiddlewareType.BEFORE;

  async middleware(
    context: MessageContext,
    next: NextMiddleware
  ): Promise<MessageContext | NextMiddlewareReturn> {
    if (
      context.eventType !== 'chat_invite_user' ||
      context.eventMemberId !== -groupId
    )
      return next();

    await context.send(
      stripIndents`
        üòä –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ —ç—Ç—É –±–µ—Å–µ–¥—É!
        ‚öôÔ∏è –ß—Ç–æ–±—ã —è –º–æ–≥ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π, –≤—ã–¥–∞–π—Ç–µ –º–Ω–µ –ø—Ä–∞–≤–æ –Ω–∞ —á—Ç–µ–Ω–∏–µ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –∏–ª–∏ –Ω–∞–∑–Ω–∞—á—å—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
  
        üìö –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–±–æ –º–Ω–µ –∏ –º–æ–µ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ - https://vk.com/@tiktokbot-info`
    );

    const [user]: UsersGetResponse = await vk.api.users.get({
      user_ids: context.senderId.toString()
    });

    return vk.api.messages.send({
      peer_id: adminPeerId,
      message: stripIndents`
        üôÉ –ú–µ–Ω—è –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –≤ –±–µ—Å–µ–¥—É
        
        ü§î –ü—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π —á–µ–ª–æ–≤–µ–∫: [id${context.senderId}|${user.first_name} ${user.last_name}]
        üî¢ PeerId –±–µ—Å–µ–¥—ã: ${context.peerId}
      `,
      random_id: 0
    });
  }
}
