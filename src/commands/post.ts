import { Attachment, ExternalAttachment, VideoAttachment } from 'vk-io';
import { WallPostResponse } from 'vk-io/lib/api/schemas/responses';

import { Command, Context } from '@/core';
import { groupId } from '@/config';
import { Logger, userVK } from '@/utils';

const log: Logger = new Logger('Post');

export const postCommand = new Command({
  trigger: /^\/–æ—Ç–ª–æ–∂–∏—Ç—å ((?:\s|.)+)$/i,
  handler: async (context: Context) => {
    // –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ - –∏–≥–Ω–æ—Ä–∏–º
    if (context.user.rights < 1) return;

    if (!context.replyMessage || context.replyMessage.senderId !== -groupId)
      return context.reply(
        '‚ùóÔ∏è –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ —Å –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã –æ—Ç–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç –≤ –≥—Ä—É–ø–ø—É'
      );

    const foundVideo: VideoAttachment | undefined =
      context.replyMessage.attachments.filter(
        // –¢—É—Ç –±–µ–¥–∞ —Å —Ç–∏–ø–∞–º–∏
        // @ts-ignore
        (attachment: Attachment | ExternalAttachment) =>
          attachment.type === 'video'
      )[0] as unknown as VideoAttachment | undefined;

    if (!foundVideo)
      return context.reply('‚ùóÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∏–¥–µ–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏');

    try {
      const response: WallPostResponse = await userVK.api.wall.post({
        owner_id: -groupId,
        message: context.$match[1],
        attachments: foundVideo.toString(),
        publish_date: Math.floor(Date.now() / 1000) + 7 * 24 * 60 * 60
      });

      return context.reply(
        `ü§ô –û—Ç–ª–æ–∂–∏–ª –∑–∞–ø–∏—Å—å - https://vk.com/public${groupId}?w=wall-${groupId}_${response.post_id}`
      );
    } catch (e) {
      log.error(e);

      return context.reply(
        `‚ùóÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞: ${e}`
      );
    }
  }
});
